[build-system]
requires = ["hatchling==1.27.0"]
build-backend = "hatchling.build"

[project]
name = "tg-open-ai-comments-bot"
version = "1.0.0"
description = ""
dependencies = [
    "aiogram==3.20.0",
    "openai==1.93.0",
    "pydantic-settings==2.10.1",
]
readme = "README.md"
requires-python = ">=3.12"
authors = [
  {name = "Anton Kurenkov", email = "quantum0@mail.ru"}
]
maintainers = [
  {name = "Anton Kurenkov", email = "quantum0@mail.ru"}
]
license = "MIT"
license-files = ["LICEN[CS]E*"]
#keywords = ["memes", "meme", "twitch", "memealert", "memealerts"]
#classifiers = [
#    "Development Status :: 2 - Pre-Alpha",
#    "Programming Language :: Python :: 3 :: Only",
#    "Topic :: Software Development :: Libraries :: Python Modules",
#    "Operating System :: OS Independent",
#]

[project.optional-dependencies]
test = [
    "ruff==0.12.1",
#    "pytest-env==1.1.5",
    "pre_commit==4.2.0",
#    "pytest==8.3.5",
#    "pytest-asyncio==0.26.0",
]

[tool.hatch.build.targets.wheel]
ignore-vcs = true
include = [
  "src/**"
]

[tool.ruff]
line-length = 120
target-version = "py312"
exclude = [".venv"]

[tool.ruff.format]
quote-style = "double"

[tool.ruff.lint]
select = [
    "ANN001",
    "ANN201",
    "ANN202",
    "ANN204",
    "ANN206",
    "A",
    "ARG",
    "B904",
    "BLE",
    "C",
    "COM",
    "E",
    "ERA",
    "F",
    "FBT",
    "I",
    "ISC",
    "W",
    "N",
    "NPY",
    "PD",
    "PIE",
    "PLC",
    "PLE",
    "PLR",
    "PLW",
    "RET",
    "RSE",
    "RUF",
    "Q",
    "SIM",
    "T",
    "TCH",
    "UP",
    "DTZ001",
    "DTZ005",
    "DTZ006",
    "DTZ007",
    "DTZ012",
]
ignore = ["COM812", "RUF001", "RUF100", "RUF003", "RUF200", "ISC001"]

[tool.ruff.lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "double"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope="function"
env = []

[tool.coverage.report]
omit = ["config-3.py", "config.py"]

[project.scripts]
run-bot = "app.main:main"